{"version":3,"sources":["index.js"],"names":["App","useState","data","setData","useEffect","window","fetch","then","response","json","d3","force","radius","d","Math","pow","count","strength","iterations","on","length","className","WordPlot","word","setWord","selectedWord","setSelectedWord","margin","width","height","color","cicleSize","xScale","domain","item","x","range","nice","yScale","y","style","fontSize","marginTop","marginBottom","viewBox","transform","map","i","key","onClick","onMouseEnter","onMouseLeave","cursor","r","fill","textAnchor","dominantBaseline","DrawDendrogram","projectData","setProjectData","projectName","setProjectName","ministries","setMinistries","selectedName","setSelectedName","dataPath","ministriesSet","Set","add","Array","from","newData","filter","contentWidth","ministriesCol","ministriesList","push","府省庁","fillColor","ministryName","forEach","ministry","contentHeight","data_stratify","id","name","parentId","parent","stratify","root","size","separation","cluster","testData","descendants","overflowX","slice","children","ProjectTable","marginLeft","marginbottom","render","document","querySelector"],"mappings":"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","file":"static/js/main.55065970.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport * as d3 from \"d3\";\nimport \"bulma/css/bulma.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataPath = \"./data/plot_test_data_25.json\";\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        d3.forceSimulation(data)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return Math.pow(d.count, 0.7) + 8;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            setData(data);\n          });\n      });\n  }, []);\n\n  if (data.length === 0) {\n    return <div>loading</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"hero is-info is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">情報科学研究 国家財政チーム</h1>\n              <h2 className=\"subtitle\">アイウエオ</h2>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"App\">\n          <WordPlot data={data} />\n        </div>\n\n        <footer className=\"footer\">\n          <div className=\"content has-text-centered\">\n            <p>&copy; 2020 上野瑞貴 野村理沙</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n};\n\n//////////////////////////\nconst WordPlot = ({ data }) => {\n  const [word, setWord] = useState(\"\");\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const contentWidth = 460;\n  const contentHeight = 460;\n\n  const margin = {\n    left: 150,\n    right: 150,\n    top: 30,\n    bottom: 50,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const color = d3.scaleOrdinal(d3.schemeAccent);\n  const cicleSize = (d) => Math.pow(d.count, 0.7);\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, (item) => item.x), d3.max(data, (item) => item.x)])\n    .range([0, contentWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.max(data, (item) => item.y), d3.min(data, (item) => item.y)])\n    .range([0, contentHeight])\n    .nice();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">キーワードバブルチャート</h1>\n        <p>\n          2019年度公開の約5000の行政事業の事業概要からキーワードを抽出し、出現頻度が高い117個のキーワードを対象に事業概要にキーワードが含まれる事業の執行額をキーワード毎に府省庁別で集計、結果を次元削減し二次元空間に表示しています。円の大きさはキーワードの出現頻度で、今回の方法で近い関係にいるキーワードを色分けしています。\n        </p>\n        <p\n          className=\"has-text-weight-bold\"\n          style={{\n            fontSize: \"large\",\n            marginTop: \"0.7rem\",\n            marginBottom: \"1.0rem\",\n          }}\n        >\n          キーワードをクリックするとクリックしたキーワードが事業概要に含まれる事業がページ下部に表示されます。\n        </p>\n\n        <svg viewBox={`0 0 ${width} ${height}`}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {data.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  onClick={() => {\n                    setWord(item.word);\n                  }}\n                  onMouseEnter={() => {\n                    setSelectedWord(item.word);\n                  }}\n                  onMouseLeave={() => {\n                    setSelectedWord(\"\");\n                  }}\n                  transform={`translate(${xScale(item.x)}, ${yScale(item.y)})`}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <title>{`word:${item.word}`}</title>\n                  <circle r={cicleSize(item)} fill={color(item.color)} />\n                  <text\n                    fontSize={`${cicleSize(item) * 0.8}px`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={item.word === selectedWord ? \"blue\" : \"black\"}\n                  >\n                    {item.word}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n      </div>\n      <div>\n        {word === \"\" ? (\n          <div>\n            キーワードをクリックするとここにデンドログラムが表示されます\n          </div>\n        ) : (\n          <DrawDendrogram word={word} />\n        )}\n      </div>\n    </section>\n  );\n};\n\n////////////////////////////\nconst DrawDendrogram = ({ word }) => {\n  const [data, setData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [projectName, setProjectName] = useState(\"\");\n  const [ministries, setMinistries] = useState([]);\n  const [selectedName, setSelectedName] = useState(\"\");\n  const dataPath = `./data/dendrogramData2/${word}.json`;\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, [dataPath]);\n\n  useEffect(() => {\n    window\n      .fetch(\"./data/tsne_+_clusters_list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const ministriesSet = new Set();\n        data.map((item) => {\n          return ministriesSet.add(item[\"府省庁\"]);\n        });\n        setMinistries(Array.from(ministriesSet));\n\n        const newData = data.filter((item) => {\n          return item[\"公開年度\"] === \"2019\" && item[\"事業名\"] === projectName;\n        });\n\n        setProjectData(newData);\n      });\n  }, [projectName]);\n\n  if (data.length === 0) {\n    return <div></div>;\n  }\n\n  const fontSize = 10;\n  const separation = 5;\n  const contentWidth = (fontSize + separation) * (data.length / 2);\n  const contentHeight = 400;\n  const ministriesCol = d3\n    .scaleLinear()\n    .domain([0, 4, 8, 12, 16, 20])\n    .range([\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]);\n\n  const margin = {\n    left: 160,\n    right: 200,\n    top: 75,\n    bottom: 100,\n  };\n\n  const ministriesList = [];\n  ministries.map((item, i) => {\n    return ministriesList.push({ 府省庁: item, color: ministriesCol(i) });\n  });\n\n  const fillColor = (ministryName) => {\n    let color = \"\";\n    ministriesList.forEach((ministry) => {\n      if (ministry[\"府省庁\"] === ministryName) {\n        color = ministry.color;\n      }\n    });\n    return color;\n  };\n\n  //const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([\n      d3.max(data, (item) => item.height),\n      d3.min(data, (item) => item.height),\n    ])\n    .range([0, contentHeight - 200]);\n\n  const stratify = d3\n    .stratify()\n    .id((d) => d.name)\n    .parentId((d) => d.parent);\n\n  const data_stratify = stratify(data);\n  const root = d3.hierarchy(data_stratify);\n  const cluster = d3\n    .cluster()\n    .size([contentWidth, contentHeight - 200])\n    .separation(() => separation);\n  cluster(root);\n\n  const testData = root.descendants();\n\n  return (\n    <div>\n      <h1 className=\"title\">事業概要に\"{word}\"を含む事業のデンドログラム</h1>\n      <p>\n        ここでは上のバブルチャートでクリックされたキーワードを事業概要に含む事業の事業概要をベクトル表現したデータを用いて階層クラスター分析を行い、その結果をデンドログラムで表示しており、図の下の方で結合している事業は近い関係にあるといえます。\n      </p>\n      <p\n        className=\"has-text-weight-bold\"\n        style={{\n          fontSize: \"large\",\n          marginTop: \"0.7rem\",\n          marginBottom: \"2.0rem\",\n        }}\n      >\n        デンドログラムの事業名をクリックすると、事業の詳細がページ下部に表示されます。\n      </p>\n      <div style={{ overflowX: \"auto\" }}>\n        <svg width=\"1195\" height={margin.top}>\n          {ministriesList.map((item, i) => {\n            return (\n              <g\n                transform={`translate(${\n                  i < 7\n                    ? 50 + 160 * i\n                    : i < 14\n                    ? 50 + 160 * (i - 8)\n                    : 50 + 160 * (i - 14)\n                }, ${i < 7 ? 17 : i < 14 ? 34 : 51})`}\n              >\n                <circle r=\"6\" fill={item.color} />\n                <text x=\"7\" y=\"5\">\n                  {item[\"府省庁\"]}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n      <div style={{ overflowX: \"scroll\" }}>\n        <svg width={contentWidth + margin.right} height={height}>\n          <g transform={`translate(0,0)`}>\n            {testData.slice(1).map((item) => {\n              return (\n                <path\n                  className=\"link\"\n                  d={`M${item.x},${yScale(item.data.data.height)}\n                        L${item.x},${yScale(item.parent.data.data.height)}\n                        L${item.parent.x},${yScale(\n                    item.parent.data.data.height\n                  )}`}\n                />\n              );\n            })}\n\n            {testData.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  transform={`translate(${item.x},${yScale(\n                    item.data.data.height\n                  )})`}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    setProjectName(item.data.data[\"事業名\"]);\n                  }}\n                  onMouseEnter={() => {\n                    setSelectedName(item.data.data[\"事業名\"]);\n                  }}\n                  onMouseLeave={() => {\n                    setSelectedName(\"\");\n                  }}\n                >\n                  <circle\n                    r={item.children ? \"1\" : \"6\"}\n                    fill={fillColor(item.data.data[\"府省庁\"])}\n                  ></circle>\n                  <text\n                    transform=\"translate(-3,10) rotate(45)\"\n                    y={item.children ? -10 : 2}\n                    x=\"0\"\n                    fontSize={`${fontSize}px`}\n                    textAnchor={item.children ? \"end\" : \"start\"}\n                    fill={\n                      item.data.data[\"事業名\"] === selectedName\n                        ? \"blue\"\n                        : \"black\"\n                    }\n                  >\n                    {item.children ? null : item.data.data[\"事業名\"]}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n      </div>\n      <div>\n        {projectData.length === 0 ? (\n          <div>事業名をクリックするとここに事業の詳細が表示されます</div>\n        ) : (\n          <ProjectTable projectData={projectData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\n/////////////////////////////\nconst ProjectTable = ({ projectData }) => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{projectData[\"0\"][\"事業名\"]}</h1>\n      <h2 className=\"has-text-weight-bold\">府省庁</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"府省庁\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業の目的</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"0.8rem\" }}>\n        {projectData[\"0\"][\"事業の目的\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業概要</h2>\n      <p\n        style={{\n          marginLeft: \"0.75rem\",\n          marginbottom: \"0.8rem\",\n        }}\n      >\n        {projectData[\"0\"][\"事業概要\"]}\n      </p>\n    </div>\n  );\n};\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}