{"version":3,"sources":["index.js"],"names":["App","useState","data","setData","useEffect","window","fetch","then","response","json","d3","force","radius","d","Math","pow","count","strength","iterations","on","length","className","WordPlot","class","word","setWord","selectedWord","setSelectedWord","margin","width","height","color","cicleSize","xScale","domain","item","x","range","nice","yScale","y","viewBox","transform","map","i","key","onClick","onMouseEnter","onMouseLeave","style","cursor","r","fill","fontSize","textAnchor","dominantBaseline","contentHeight","DrawDendrogram","projectData","setProjectData","projectName","setProjectName","ministries","setMinistries","selectedName","setSelectedName","dataPath","ministriesSet","Set","add","Array","from","newData","filter","contentWidth","ministriesCol","ministriesList","push","府省庁","fillColor","ministryName","forEach","ministry","data_stratify","id","name","parentId","parent","stratify","root","size","separation","cluster","testData","descendants","overflowX","slice","children","ProjectTable","marginLeft","marginbottom","render","document","querySelector"],"mappings":"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","file":"static/js/main.92310e3c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport * as d3 from \"d3\";\nimport \"bulma/css/bulma.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataPath = \"./data/plot_test_data_25.json\";\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        d3.forceSimulation(data)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return Math.pow(d.count, 0.7) + 8;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            setData(data);\n          });\n      });\n  }, []);\n\n  if (data.length === 0) {\n    return <div>loading</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"hero is-info is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">情報科学研究 国家財政チーム</h1>\n              <h2 className=\"subtitle\">アイウエオ</h2>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"App\">\n          <WordPlot data={data} />\n        </div>\n\n        <footer class=\"footer\">\n          <div class=\"content has-text-centered\">\n            <p>&copy; 2020 上野瑞貴 野村理沙</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n};\n\n//////////////////////////\nconst WordPlot = ({ data }) => {\n  const [word, setWord] = useState(\"\");\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const contentWidth = 460;\n  const contentHeight = 460;\n\n  const margin = {\n    left: 150,\n    right: 150,\n    top: 30,\n    bottom: 10,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const color = d3.scaleOrdinal(d3.schemeAccent);\n  const cicleSize = (d) => Math.pow(d.count, 0.7);\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, (item) => item.x), d3.max(data, (item) => item.x)])\n    .range([0, contentWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.max(data, (item) => item.y), d3.min(data, (item) => item.y)])\n    .range([0, contentHeight])\n    .nice();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <svg viewBox={`0 0 ${width} ${height}`}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {data.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  onClick={() => {\n                    setWord(item.word);\n                  }}\n                  onMouseEnter={() => {\n                    setSelectedWord(item.word);\n                  }}\n                  onMouseLeave={() => {\n                    setSelectedWord(\"\");\n                  }}\n                  transform={`translate(${xScale(item.x)}, ${yScale(item.y)})`}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <title>{`word:${item.word}`}</title>\n                  <circle r={cicleSize(item)} fill={color(item.color)} />\n                  <text\n                    fontSize={`${cicleSize(item) * 0.8}px`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={item.word === selectedWord ? \"blue\" : \"black\"}\n                  >\n                    {item.word}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n          <g\n            transform={`translate(${margin.left + contentWidth}, ${\n              contentHeight - 20\n            })`}\n          >\n            <text>{word}</text>\n          </g>\n        </svg>\n      </div>\n      <div>{word === \"\" ? null : <DrawDendrogram word={word} />}</div>\n    </section>\n  );\n};\n\n////////////////////////////\nconst DrawDendrogram = ({ word }) => {\n  const [data, setData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [projectName, setProjectName] = useState(\"\");\n  const [ministries, setMinistries] = useState([]);\n  const [selectedName, setSelectedName] = useState(\"\");\n  const dataPath = `./data/dendrogramData2/${word}.json`;\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, [dataPath]);\n\n  useEffect(() => {\n    window\n      .fetch(\"./data/tsne_+_clusters_list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const ministriesSet = new Set();\n        data.map((item) => {\n          return ministriesSet.add(item[\"府省庁\"]);\n        });\n        setMinistries(Array.from(ministriesSet));\n\n        const newData = data.filter((item) => {\n          return item[\"公開年度\"] === \"2019\" && item[\"事業名\"] === projectName;\n        });\n\n        setProjectData(newData);\n      });\n  }, [projectName]);\n\n  if (data.length === 0) {\n    return <div></div>;\n  }\n\n  const fontSize = 10;\n  const separation = 5;\n  const contentWidth = (fontSize + separation) * (data.length / 2);\n  const contentHeight = 400;\n  const ministriesCol = d3\n    .scaleLinear()\n    .domain([0, 4, 8, 12, 16, 20])\n    .range([\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]);\n\n  const margin = {\n    left: 160,\n    right: 200,\n    top: 20,\n    bottom: 200,\n  };\n\n  const ministriesList = [];\n  ministries.map((item, i) => {\n    return ministriesList.push({ 府省庁: item, color: ministriesCol(i) });\n  });\n\n  const fillColor = (ministryName) => {\n    let color = \"\";\n    ministriesList.forEach((ministry) => {\n      if (ministry[\"府省庁\"] === ministryName) {\n        color = ministry.color;\n      }\n    });\n    return color;\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([\n      d3.max(data, (item) => item.height),\n      d3.min(data, (item) => item.height),\n    ])\n    .range([0, contentHeight - 200]);\n\n  const stratify = d3\n    .stratify()\n    .id((d) => d.name)\n    .parentId((d) => d.parent);\n\n  const data_stratify = stratify(data);\n  const root = d3.hierarchy(data_stratify);\n  const cluster = d3\n    .cluster()\n    .size([contentWidth, contentHeight - 200])\n    .separation(() => separation);\n  cluster(root);\n\n  const testData = root.descendants();\n\n  return (\n    <div>\n      <div className=\"columns\">\n        <div className=\"column is-2\">\n          <svg width={margin.left} height=\"600\">\n            {ministriesList.map((item, i) => {\n              return (\n                <g transform={`translate(6, ${margin.top + 30 * i})`}>\n                  <circle r=\"6\" fill={item.color} />\n                  <text x=\"7\" y=\"5\">\n                    {item[\"府省庁\"]}\n                  </text>\n                </g>\n              );\n            })}\n          </svg>\n        </div>\n\n        <div className=\"column\" style={{ overflowX: \"scroll\" }}>\n          <svg width={contentWidth + margin.right} height={height}>\n            <g transform={`translate(0,${margin.top})`}>\n              {testData.slice(1).map((item) => {\n                return (\n                  <path\n                    className=\"link\"\n                    d={`M${item.x},${yScale(item.data.data.height)}\n                        L${item.x},${yScale(item.parent.data.data.height)}\n                        L${item.parent.x},${yScale(\n                      item.parent.data.data.height\n                    )}`}\n                  />\n                );\n              })}\n\n              {testData.map((item, i) => {\n                return (\n                  <g\n                    key={i}\n                    transform={`translate(${item.x},${yScale(\n                      item.data.data.height\n                    )})`}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => {\n                      setProjectName(item.data.data[\"事業名\"]);\n                    }}\n                    onMouseEnter={() => {\n                      setSelectedName(item.data.data[\"事業名\"]);\n                    }}\n                    onMouseLeave={() => {\n                      setSelectedName(\"\");\n                    }}\n                  >\n                    <circle\n                      r={item.children ? \"1\" : \"6\"}\n                      fill={fillColor(item.data.data[\"府省庁\"])}\n                    ></circle>\n                    <text\n                      transform=\"translate(-3,10) rotate(45)\"\n                      y={item.children ? -10 : 2}\n                      x=\"0\"\n                      fontSize={`${fontSize}px`}\n                      textAnchor={item.children ? \"end\" : \"start\"}\n                      fill={\n                        item.data.data[\"事業名\"] === selectedName\n                          ? \"blue\"\n                          : \"black\"\n                      }\n                    >\n                      {item.children ? null : item.data.data[\"事業名\"]}\n                    </text>\n                  </g>\n                );\n              })}\n            </g>\n          </svg>\n        </div>\n      </div>\n      <div>\n        {projectData.length === 0 ? null : (\n          <ProjectTable projectData={projectData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\n/////////////////////////////\nconst ProjectTable = ({ projectData }) => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{projectData[\"0\"][\"事業名\"]}</h1>\n      <h2 className=\"has-text-weight-bold\">府省庁</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"府省庁\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業の目的</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"0.8rem\" }}>\n        {projectData[\"0\"][\"事業の目的\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業概要</h2>\n      <p\n        style={{\n          marginLeft: \"0.75rem\",\n          marginbottom: \"0.8rem\",\n        }}\n      >\n        {projectData[\"0\"][\"事業概要\"]}\n      </p>\n    </div>\n  );\n};\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}