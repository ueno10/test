{"version":3,"sources":["index.js"],"names":["App","useState","data","setData","useEffect","window","fetch","then","response","json","forEach","item","wordColor","d3","force","radius","d","Math","pow","count","strength","iterations","on","length","className","WordPlot","class","word","setWord","setWordColor","margin","width","height","color","cicleSize","xScale","domain","x","range","nice","yScale","y","viewBox","transform","map","i","key","onMouseEnter","onMouseLeave","onClick","style","cursor","r","fill","fontSize","textAnchor","dominantBaseline","DrawDendrogram","projectData","setProjectData","projectName","setProjectName","ministries","setMinistries","dataPath","ministriesSet","Set","add","Array","from","newData","filter","console","log","contentWidth","ministriesCol","ministriesList","push","府省庁","fillColor","ministryName","ministry","contentHeight","data_stratify","id","name","parentId","parent","stratify","root","size","separation","cluster","testData","descendants","overflowX","slice","children","ProjectTable","marginLeft","marginbottom","render","document","querySelector"],"mappings":"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","file":"static/js/main.516d8f79.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport * as d3 from \"d3\";\nimport \"bulma/css/bulma.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataPath = \"./data/plot_test_data_25.json\";\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        data.forEach((item) => {\n          item.wordColor = \"black\";\n        });\n        d3.forceSimulation(data)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return Math.pow(d.count, 0.7) + 5;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            setData(data);\n          });\n      });\n  }, []);\n\n  if (data.length === 0) {\n    return <div>loading</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"hero is-info is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">情報科学研究 国家財政チーム</h1>\n              <h2 className=\"subtitle\">アイウエオ</h2>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"App\">\n          <WordPlot data={data} />\n        </div>\n\n        <footer class=\"footer\">\n          <div class=\"content has-text-centered\">\n            <p>&copy; 2020 上野瑞貴 野村理沙</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n};\n\n//////////////////////////\nconst WordPlot = ({ data }) => {\n  const [word, setWord] = useState(\"\");\n  const [wordColor, setWordColor] = useState(\"black\");\n  const contentWidth = 440;\n  const contentHeight = 440;\n\n  const margin = {\n    left: 150,\n    right: 150,\n    top: 10,\n    bottom: 10,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const color = d3.scaleOrdinal(d3.schemeAccent);\n  const cicleSize = (d) => Math.pow(d.count, 0.7);\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, (item) => item.x), d3.max(data, (item) => item.x)])\n    .range([0, contentWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.max(data, (item) => item.y), d3.min(data, (item) => item.y)])\n    .range([0, contentHeight])\n    .nice();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <svg viewBox={`0 0 ${width} ${height}`}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {data.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  onMouseEnter={() => {\n                    setWordColor(\"black\");\n                    item.wordColor = wordColor;\n                  }}\n                  onMouseLeave={() => {\n                    setWordColor(\"blue\");\n                    item.wordColor = wordColor;\n                  }}\n                  onClick={() => {\n                    setWord(item.word);\n                  }}\n                  transform={`translate(${xScale(item.x)}, ${yScale(item.y)})`}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <title>{`word:${item.word}`}</title>\n                  <circle r={cicleSize(item)} fill={color(item.color)} />\n                  <text\n                    fontSize={`${cicleSize(item) * 0.8}px`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={item.wordColor}\n                  >\n                    {item.word}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n      </div>\n      <div>{word === \"\" ? null : <DrawDendrogram word={word} />}</div>\n    </section>\n  );\n};\n\n////////////////////////////\nconst DrawDendrogram = ({ word }) => {\n  const [data, setData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [projectName, setProjectName] = useState(\"\");\n  const [ministries, setMinistries] = useState([]);\n  const dataPath = `./data/dendrogramData2/${word}.json`;\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, [dataPath]);\n\n  useEffect(() => {\n    window\n      .fetch(\"./data/tsne_+_clusters_list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const ministriesSet = new Set();\n        data.map((item) => {\n          ministriesSet.add(item[\"府省庁\"]);\n        });\n        setMinistries(Array.from(ministriesSet));\n\n        const newData = data.filter((item) => {\n          return item[\"公開年度\"] === \"2019\" && item[\"事業名\"] === projectName;\n        });\n\n        setProjectData(newData);\n      });\n  }, [projectName]);\n\n  if (data.length === 0) {\n    return <div></div>;\n  }\n\n  console.log(data);\n\n  const fontSize = 10;\n  const separation = 5;\n  const contentWidth = (fontSize + separation) * (data.length / 2);\n  const contentHeight = 400;\n  const ministriesCol = d3\n    .scaleLinear()\n    .domain([0, 4, 8, 12, 16, 20])\n    .range([\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]);\n\n  const margin = {\n    left: 160,\n    right: 200,\n    top: 20,\n    bottom: 200,\n  };\n\n  const ministriesList = [];\n  ministries.map((item, i) => {\n    return ministriesList.push({ 府省庁: item, color: ministriesCol(i) });\n  });\n\n  const fillColor = (ministryName) => {\n    let color = \"\";\n    ministriesList.forEach((ministry) => {\n      if (ministry[\"府省庁\"] === ministryName) {\n        color = ministry.color;\n      }\n    });\n    return color;\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([\n      d3.max(data, (item) => item.height),\n      d3.min(data, (item) => item.height),\n    ])\n    .range([0, contentHeight - 200]);\n\n  const stratify = d3\n    .stratify()\n    .id((d) => d.name)\n    .parentId((d) => d.parent);\n\n  const data_stratify = stratify(data);\n  const root = d3.hierarchy(data_stratify);\n  const cluster = d3\n    .cluster()\n    .size([contentWidth, contentHeight - 200])\n    .separation(() => separation);\n  cluster(root);\n\n  const testData = root.descendants();\n\n  return (\n    <div>\n      <div className=\"columns\">\n        <div className=\"column is-2\">\n          <svg width={margin.left} height=\"600\">\n            {ministriesList.map((item, i) => {\n              return (\n                <g transform={`translate(6, ${margin.top + 30 * i})`}>\n                  <circle r=\"6\" fill={item.color} />\n                  <text x=\"7\" y=\"5\">\n                    {item[\"府省庁\"]}\n                  </text>\n                </g>\n              );\n            })}\n          </svg>\n        </div>\n\n        <div className=\"column\" style={{ overflowX: \"scroll\" }}>\n          <svg width={contentWidth + margin.right} height={height}>\n            <g transform={`translate(0,${margin.top})`}>\n              {testData.slice(1).map((item) => {\n                return (\n                  <path\n                    className=\"link\"\n                    d={`M${item.x},${yScale(item.data.data.height)}\n                        L${item.x},${yScale(item.parent.data.data.height)}\n                        L${item.parent.x},${yScale(\n                      item.parent.data.data.height\n                    )}`}\n                  />\n                );\n              })}\n\n              {testData.map((item, i) => {\n                return (\n                  <g\n                    key={i}\n                    transform={`translate(${item.x},${yScale(\n                      item.data.data.height\n                    )})`}\n                    onClick={() => {\n                      setProjectName(item.data.data[\"事業名\"]);\n                    }}\n                  >\n                    <circle\n                      r={item.children ? \"1\" : \"6\"}\n                      fill={fillColor(item.data.data[\"府省庁\"])}\n                    ></circle>\n                    <text\n                      style={{ cursor: \"pointer\" }}\n                      transform=\"translate(-3,10) rotate(45)\"\n                      y={item.children ? -10 : 2}\n                      x=\"0\"\n                      fontSize={`${fontSize}px`}\n                      textAnchor={item.children ? \"end\" : \"start\"}\n                    >\n                      {item.children ? null : item.data.data[\"事業名\"]}\n                    </text>\n                  </g>\n                );\n              })}\n            </g>\n          </svg>\n        </div>\n      </div>\n      <div>\n        {projectData.length === 0 ? null : (\n          <ProjectTable projectData={projectData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\n/////////////////////////////\nconst ProjectTable = ({ projectData }) => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{projectData[\"0\"][\"事業名\"]}</h1>\n      <h2 className=\"has-text-weight-bold\">府省庁</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"府省庁\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業の目的</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"0.8rem\" }}>\n        {projectData[\"0\"][\"事業の目的\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業概要</h2>\n      <p\n        style={{\n          marginLeft: \"0.75rem\",\n          marginbottom: \"0.8rem\",\n        }}\n      >\n        {projectData[\"0\"][\"事業概要\"]}\n      </p>\n    </div>\n  );\n};\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}