{"version":3,"sources":["index.js"],"names":["App","useState","data","setData","useEffect","window","fetch","then","response","json","d3","force","radius","d","Math","pow","count","strength","iterations","on","length","className","WordPlot","word","setWord","selectedWord","setSelectedWord","margin","width","height","color","cicleSize","xScale","domain","item","x","range","nice","yScale","y","style","fontSize","marginTop","marginBottom","viewBox","transform","map","i","key","onClick","onMouseEnter","onMouseLeave","cursor","r","fill","textAnchor","dominantBaseline","DrawDendrogram","projectData","setProjectData","projectName","setProjectName","ministries","setMinistries","selectedName","setSelectedName","setSelectedNode","selectedNodeLeaves","setSelectedNodeLeaves","nodeLeavesData","setNodeLeavesData","dataPath","ministriesSet","Set","add","Array","from","newData","filter","newNodeLeavesData","node","project","push","事業名","執行額","補正予算","府省庁","contentWidth","ministriesCol","ministriesList","fillColor","ministryName","forEach","ministry","contentHeight","data_stratify","id","name","parentId","parent","stratify","root","size","separation","cluster","testData","descendants","overflowX","slice","undefined","children","leaves","DrawHistogram","ProjectTable","marginLeft","marginbottom","projectsMoney","console","log","histogramData","thresholds","ticks","x1","y1","x2","y2","stroke","font-size","Number","isInteger","bin","x0","render","document","querySelector"],"mappings":"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","file":"static/js/main.8f8328cb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport * as d3 from \"d3\";\nimport \"bulma/css/bulma.css\";\nimport { set } from \"d3\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const dataPath = \"./data/plot_test_data_25.json\";\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        d3.forceSimulation(data)\n          .force(\n            \"collide\",\n            d3\n              .forceCollide()\n              .radius(function (d) {\n                return Math.pow(d.count, 0.7) + 8;\n              })\n\n              .strength(0.01)\n              .iterations(30)\n          )\n          .force(\"charge\", d3.forceManyBody().strength(1))\n          .force(\"center\", d3.forceCenter())\n          .on(\"end\", () => {\n            setData(data);\n          });\n      });\n  }, []);\n\n  if (data.length === 0) {\n    return <div>loading</div>;\n  } else {\n    return (\n      <div>\n        <div className=\"hero is-info is-bold\">\n          <div className=\"hero-body\">\n            <div className=\"container\">\n              <h1 className=\"title\">行政事業可視化</h1>\n              <h2 className=\"subtitle\">情報科学研究 国家財政チーム</h2>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"App\">\n          <WordPlot data={data} />\n        </div>\n\n        <footer className=\"footer\">\n          <div className=\"content has-text-centered\">\n            <p>&copy; 2020 上野瑞貴 野村理沙</p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n};\n\n//////////////////////////\nconst WordPlot = ({ data }) => {\n  const [word, setWord] = useState(\"\");\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const contentWidth = 460;\n  const contentHeight = 460;\n\n  const margin = {\n    left: 150,\n    right: 150,\n    top: 30,\n    bottom: 50,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const color = d3.scaleOrdinal(d3.schemeAccent);\n  const cicleSize = (d) => Math.pow(d.count, 0.7);\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(data, (item) => item.x), d3.max(data, (item) => item.x)])\n    .range([0, contentWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.max(data, (item) => item.y), d3.min(data, (item) => item.y)])\n    .range([0, contentHeight])\n    .nice();\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">キーワードバブルチャート</h1>\n        <p>\n          2019年度公開の約5000の行政事業の事業概要からそれぞれキーワードを抽出し、キーワード毎に事業概要にキーワードが含まれている事業の執行額を担当府省庁別で集計をしてデータ作成を行いました。その結果を次元削減し、事業からキーワードを抽出した際に出現頻度の高かった117個のキーワードを二次元空間に表示しています。円の大きさはキーワードの出現頻度で決め、位置の近さで色付けしています。\n        </p>\n        <p\n          className=\"has-text-weight-bold\"\n          style={{\n            fontSize: \"large\",\n            marginTop: \"0.7rem\",\n            marginBottom: \"1.0rem\",\n          }}\n        >\n          キーワードをクリックするとクリックしたキーワードが事業概要に含まれる事業がページ下部に表示されます。\n        </p>\n\n        <svg viewBox={`0 0 ${width} ${height}`}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {data.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  onClick={() => {\n                    setWord(item.word);\n                  }}\n                  onMouseEnter={() => {\n                    setSelectedWord(item.word);\n                  }}\n                  onMouseLeave={() => {\n                    setSelectedWord(\"\");\n                  }}\n                  transform={`translate(${xScale(item.x)}, ${yScale(item.y)})`}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <title>{`word:${item.word}`}</title>\n                  <circle r={cicleSize(item)} fill={color(item.color)} />\n                  <text\n                    fontSize={`${cicleSize(item) * 0.8}px`}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fill={item.word === selectedWord ? \"blue\" : \"black\"}\n                  >\n                    {item.word}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n      </div>\n      <div>\n        {word === \"\" ? (\n          <div>\n            キーワードをクリックするとここにデンドログラムが表示されます\n          </div>\n        ) : (\n          <DrawDendrogram word={word} />\n        )}\n      </div>\n    </section>\n  );\n};\n\n////////////////////////////\nconst DrawDendrogram = ({ word }) => {\n  const [data, setData] = useState([]);\n  const [projectData, setProjectData] = useState([]);\n  const [projectName, setProjectName] = useState(\"\");\n  const [ministries, setMinistries] = useState([]);\n  const [selectedName, setSelectedName] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState({});\n  const [selectedNodeLeaves, setSelectedNodeLeaves] = useState([]);\n  const [nodeLeavesData, setNodeLeavesData] = useState([]);\n  const dataPath = `./data/dendrogramData2/${word}.json`;\n\n  useEffect(() => {\n    window\n      .fetch(dataPath)\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, [dataPath]);\n\n  useEffect(() => {\n    window\n      .fetch(\"./data/tsne_+_clusters_list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const ministriesSet = new Set();\n        data.map((item) => {\n          return ministriesSet.add(item[\"府省庁\"]);\n        });\n        setMinistries(Array.from(ministriesSet));\n\n        const newData = data.filter((item) => {\n          return item[\"公開年度\"] === \"2019\" && item[\"事業名\"] === projectName;\n        });\n        setProjectData(newData);\n      });\n  }, [projectName]);\n\n  useEffect(() => {\n    window\n      .fetch(\"./data/tsne_+_clusters_list.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const newNodeLeavesData = [];\n        for (const node of selectedNodeLeaves) {\n          for (const project of data) {\n            if (\n              project[\"事業名\"] === node.data.data[\"事業名\"] &&\n              project[\"公開年度\"] === \"2019\" &&\n              project[\"府省庁\"] === node.data.data[\"府省庁\"]\n            ) {\n              newNodeLeavesData.push({\n                事業名: project[\"事業名\"],\n                執行額: +project[\"執行額\"],\n                補正予算: project[\"補正予算\"],\n                府省庁: project[\"府省庁\"],\n              });\n            }\n          }\n        }\n        setNodeLeavesData(newNodeLeavesData);\n      });\n  }, [selectedNodeLeaves]);\n\n  if (data.length === 0) {\n    return <div></div>;\n  }\n\n  const fontSize = 10;\n  const separation = 5;\n  const contentWidth = (fontSize + separation) * (data.length / 2);\n  const contentHeight = 400;\n  const ministriesCol = d3\n    .scaleLinear()\n    .domain([0, 4, 8, 12, 16, 20])\n    .range([\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]);\n\n  const margin = {\n    left: 160,\n    right: 200,\n    top: 75,\n    bottom: 150,\n  };\n\n  const ministriesList = [];\n  ministries.map((item, i) => {\n    return ministriesList.push({ 府省庁: item, color: ministriesCol(i) });\n  });\n\n  const fillColor = (ministryName) => {\n    let color = \"\";\n    ministriesList.forEach((ministry) => {\n      if (ministry[\"府省庁\"] === ministryName) {\n        color = ministry.color;\n      }\n    });\n    return color;\n  };\n\n  //const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([\n      d3.max(data, (item) => item.height),\n      d3.min(data, (item) => item.height),\n    ])\n    .range([0, contentHeight - 200]);\n\n  const stratify = d3\n    .stratify()\n    .id((d) => d.name)\n    .parentId((d) => d.parent);\n\n  const data_stratify = stratify(data);\n  const root = d3.hierarchy(data_stratify);\n  const cluster = d3\n    .cluster()\n    .size([contentWidth, contentHeight - 200])\n    .separation(() => separation);\n  cluster(root);\n\n  const testData = root.descendants();\n\n  return (\n    <div>\n      <h1 className=\"title\">事業概要に\"{word}\"を含む事業のデンドログラム</h1>\n      <p>\n        ここでは上の図でクリックされたキーワードを事業概要に含む事業の事業概要をベクトル表現したデータを用いて階層クラスター分析を行い、その結果をデンドログラムで表示しており、図の下の方で結合している事業は近い関係にあるといえます。\n      </p>\n      <p\n        className=\"has-text-weight-bold\"\n        style={{\n          fontSize: \"large\",\n          marginTop: \"0.7rem\",\n          marginBottom: \"2.0rem\",\n        }}\n      >\n        デンドログラムの事業名をクリックすると、事業の詳細がページ下部に表示されます。\n      </p>\n      <div style={{ overflowX: \"auto\" }}>\n        <svg width=\"1195\" height={margin.top}>\n          {ministriesList.map((item, i) => {\n            return (\n              <g\n                transform={`translate(${\n                  i < 7\n                    ? 50 + 160 * i\n                    : i < 14\n                    ? 50 + 160 * (i - 8)\n                    : 50 + 160 * (i - 14)\n                }, ${i < 7 ? 17 : i < 14 ? 34 : 51})`}\n              >\n                <circle r=\"6\" fill={item.color} />\n                <text x=\"7\" y=\"5\">\n                  {item[\"府省庁\"]}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n      <div style={{ overflowX: \"scroll\" }}>\n        <svg width={contentWidth + margin.right} height={height}>\n          <g transform={`translate(0,0)`}>\n            {testData.slice(1).map((item) => {\n              return (\n                <path\n                  className=\"link\"\n                  d={`M${item.x},${yScale(item.data.data.height)}\n                        L${item.x},${yScale(item.parent.data.data.height)}\n                        L${item.parent.x},${yScale(\n                    item.parent.data.data.height\n                  )}`}\n                />\n              );\n            })}\n\n            {testData.map((item, i) => {\n              return (\n                <g\n                  key={i}\n                  transform={`translate(${item.x},${yScale(\n                    item.data.data.height\n                  )})`}\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => {\n                    setProjectName(item.data.data[\"事業名\"]);\n                    if (item.children !== undefined) {\n                      setSelectedNode(item);\n                      setSelectedNodeLeaves(item.leaves());\n                      //console.log(selectedNode);\n                      //console.log(selectedNodeLeaves);\n                    }\n                  }}\n                  onMouseEnter={() => {\n                    setSelectedName(item.data.data[\"事業名\"]);\n                  }}\n                  onMouseLeave={() => {\n                    setSelectedName(\"\");\n                  }}\n                >\n                  <circle\n                    r={item.children ? \"2\" : \"6\"}\n                    fill={fillColor(item.data.data[\"府省庁\"])}\n                  ></circle>\n                  <text\n                    transform=\"translate(-3,10) rotate(45)\"\n                    y={item.children ? -10 : 2}\n                    x=\"0\"\n                    fontSize={`${fontSize}px`}\n                    textAnchor={item.children ? \"end\" : \"start\"}\n                    fill={\n                      item.data.data[\"事業名\"] === selectedName\n                        ? \"blue\"\n                        : \"black\"\n                    }\n                  >\n                    {item.children ? null : item.data.data[\"事業名\"]}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n        </svg>\n      </div>\n      <div>\n        {nodeLeavesData.length === 0 ? (\n          <div>ノードをクリックすると下</div>\n        ) : (\n          <DrawHistogram nodeLeavesData={nodeLeavesData} />\n        )}\n      </div>\n      <div>\n        {projectData.length === 0 ? (\n          <div>事業名をクリックするとここに事業の詳細が表示されます</div>\n        ) : (\n          <ProjectTable projectData={projectData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\n/////////////////////////////\nconst ProjectTable = ({ projectData }) => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">{projectData[\"0\"][\"事業名\"]}</h1>\n      <h2 className=\"has-text-weight-bold\">府省庁</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"府省庁\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">当初予算(百万円)</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"当初予算\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">補正予算(百万円)</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"補正予算\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">執行額(百万円)</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"1.0rem\" }}>\n        {projectData[\"0\"][\"執行額\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業の目的</h2>\n      <p style={{ marginLeft: \"0.75rem\", marginbottom: \"0.8rem\" }}>\n        {projectData[\"0\"][\"事業の目的\"]}\n      </p>\n      <h2 className=\"has-text-weight-bold\">事業概要</h2>\n      <p\n        style={{\n          marginLeft: \"0.75rem\",\n          marginbottom: \"0.8rem\",\n        }}\n      >\n        {projectData[\"0\"][\"事業概要\"]}\n      </p>\n    </div>\n  );\n};\n\n//////////////////////\nconst DrawHistogram = ({ nodeLeavesData }) => {\n  const contentWidth = 300;\n  const contentHeight = 100;\n\n  const margin = {\n    left: 30,\n    right: 50,\n    top: 20,\n    bottom: 50,\n  };\n\n  const width = contentWidth + margin.left + margin.right;\n  const height = contentHeight + margin.top + margin.bottom;\n\n  const projectsMoney = [];\n  for (const node of nodeLeavesData) {\n    projectsMoney.push(node[\"執行額\"]);\n  }\n\n  console.log(projectsMoney);\n\n  const binCol = \"blue\";\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(projectsMoney)])\n    .range([0, contentWidth])\n    .nice();\n\n  const histogramData = d3\n    .histogram()\n    .domain(xScale.domain())\n    .thresholds(xScale.ticks(15))(projectsMoney);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.max(histogramData, (item) => item.length), 0])\n    .range([0, contentHeight])\n    .nice();\n\n  console.log(histogramData);\n\n  return (\n    <div>\n      <svg viewBox={`0 0 ${width} ${height}`}>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {xScale.ticks().map((x) => {\n            return (\n              <g transform={`translate(${xScale(x)},0)`}>\n                <line\n                  x1=\"0\"\n                  y1={contentHeight}\n                  x2=\"0\"\n                  y2={contentHeight + 2}\n                  stroke=\"black\"\n                />\n                <text y={contentHeight + 8} textAnchor=\"middle\" font-size=\"5\">\n                  {x}\n                </text>\n              </g>\n            );\n          })}\n          {yScale.ticks().map((y) => {\n            return (\n              <g transform={`translate(0,${yScale(y)})`}>\n                {Number.isInteger(y) ? (\n                  <line x1=\"-2\" y1=\"0\" x2=\"0\" y2=\"0\" stroke=\"black\" />\n                ) : null}\n                <line\n                  x1=\"0\"\n                  y1=\"0\"\n                  x2={contentWidth}\n                  y2=\"0\"\n                  stroke=\"gainsboro\"\n                />\n                <text x=\"-7\" y=\"1\" textAnchor=\"middle\" fontSize=\"5\">\n                  {Number.isInteger(y) ? y : null}\n                </text>\n              </g>\n            );\n          })}\n          {histogramData.map((bin, i) => {\n            return (\n              <g\n                key={i}\n                transform={`translate(${xScale(bin.x0)}, ${yScale(\n                  bin.length\n                )})`}\n              >\n                <rect\n                  x=\"0\"\n                  width={\n                    xScale(histogramData[0].x1) -\n                    xScale(histogramData[0].x0) -\n                    1\n                  }\n                  height={contentHeight - yScale(bin.length)}\n                  fill={binCol}\n                />\n              </g>\n            );\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n};\nrender(<App />, document.querySelector(\"#content\"));\n"],"sourceRoot":""}